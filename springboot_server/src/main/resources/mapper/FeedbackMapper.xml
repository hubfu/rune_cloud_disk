<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boot.mapper.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.boot.entity.Feedback" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="is_solve" property="isSolve" jdbcType="BIT" />
    <result column="solution" property="solution" jdbcType="VARCHAR" />
    <result column="send_date" property="sendDate" jdbcType="TIMESTAMP" />
    <result column="solve_date" property="solveDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, title, body, is_solve, solution, send_date, solve_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.boot.entity.FeedbackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boot.entity.FeedbackExample" >
    delete from feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boot.entity.Feedback" >
    insert into feedback (id, user_id, title, 
      body, is_solve, solution, 
      send_date, solve_date)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{body,jdbcType=VARCHAR}, #{isSolve,jdbcType=BIT}, #{solution,jdbcType=VARCHAR}, 
      #{sendDate,jdbcType=TIMESTAMP}, #{solveDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.boot.entity.Feedback" >
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="isSolve != null" >
        is_solve,
      </if>
      <if test="solution != null" >
        solution,
      </if>
      <if test="sendDate != null" >
        send_date,
      </if>
      <if test="solveDate != null" >
        solve_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="isSolve != null" >
        #{isSolve,jdbcType=BIT},
      </if>
      <if test="solution != null" >
        #{solution,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null" >
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="solveDate != null" >
        #{solveDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boot.entity.FeedbackExample" resultType="java.lang.Integer" >
    select count(*) from feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update feedback
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null" >
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.isSolve != null" >
        is_solve = #{record.isSolve,jdbcType=BIT},
      </if>
      <if test="record.solution != null" >
        solution = #{record.solution,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null" >
        send_date = #{record.sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.solveDate != null" >
        solve_date = #{record.solveDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update feedback
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR},
      is_solve = #{record.isSolve,jdbcType=BIT},
      solution = #{record.solution,jdbcType=VARCHAR},
      send_date = #{record.sendDate,jdbcType=TIMESTAMP},
      solve_date = #{record.solveDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boot.entity.Feedback" >
    update feedback
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="isSolve != null" >
        is_solve = #{isSolve,jdbcType=BIT},
      </if>
      <if test="solution != null" >
        solution = #{solution,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null" >
        send_date = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="solveDate != null" >
        solve_date = #{solveDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boot.entity.Feedback" >
    update feedback
    set user_id = #{userId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      is_solve = #{isSolve,jdbcType=BIT},
      solution = #{solution,jdbcType=VARCHAR},
      send_date = #{sendDate,jdbcType=TIMESTAMP},
      solve_date = #{solveDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>